문제 설명
문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.
제한 조건
공백을 포함하지 않고, 문자열 전체의 짝/홀수 인덱스를 판단해야합니다.
첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.

function solution(s){
   b = s.split(" ").join("")
//    console.log(s.split(" "))
//    console.log(s.length)
   let abc = "";
   let count = "";
   for (j = 0; j < s.length; j++){
    console.log(s[j] == " ")
    if(s[j] == " "){
       count += j + ","
    }
}
   for (i = 0; i < b.length; i++){
    if(i % 2 == 0){
        abc += b[i].toUpperCase()
        
    }else {
        abc += b[i]
    }
   }
   let counts = count.split(",").map(Number)
   let abc2 = abc.split("")
   for (i = 0; i < counts.length; i++){
     abc2.splice(counts[i],0," ")
   }
return abc2.slice(1, s.length+1).join("")

}
let s= "hang hae ninety nine";
console.log(solution(s))
